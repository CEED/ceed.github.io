# Copyright (c) 2017, Lawrence Livermore National Security, LLC. Produced at
# the Lawrence Livermore National Laboratory. LLNL-CODE-734707. All Rights
# reserved. See files LICENSE and NOTICE for details.
#
# This file is part of CEED, a collection of benchmarks, miniapps, software
# libraries and APIs for efficient high-order finite element and spectral
# element discretizations for exascale applications. For more information and
# source code availability see http://github.com/ceed.
#
# The CEED research is supported by the Exascale Computing Project 17-SC-20-SC,
# a collaborative effort of two U.S. Department of Energy organizations (Office
# of Science and the National Nuclear Security Administration) responsible for
# the planning and preparation of a capable exascale ecosystem, including
# software, applications, hardware, advanced system engineering and early
# testbed platforms, in support of the nation's exascale computing imperative.
#
# By default, the Spack-based CEED installation will build all required packages
# from scratch, which can take a long time. The file ~/.spack/packages.yaml, or
# ~/.spack/<platform>/packages.yaml allows you to list packages already
# installed on your system for Spack to use instead of compiling them itself.
#
# This is an example of a packages.yaml file for Mac OS X, arch=darwin-*-x86_64,
# using the Clang compiler, OpenMPI and Apple's BLAS/LAPACK accelerator library.
# The packages in ~/brew were installed with Homebrew (https://brew.sh/) using
# e.g. "brew install openmpi". The packages in /usr are provided by Apple and
# come pre-build with Mac OS X. The cuda package is provided by NVIDIA and
# should be installed separately by downloading it from developer.nvidia.com.

packages:
    all:
        compiler: [clang]
        providers:
            blas: [veclibfort]
            lapack: [veclibfort]
            mpi: [openmpi]
    openmpi:
        paths:
            openmpi@3.0.0: ~/brew
        buildable: False

    cmake:
        paths:
            cmake@3.10.2: ~/brew
        buildable: False
    cuda:
        paths:
            cuda@9.1.85: /usr/local/cuda
        buildable: False
    libx11:
        paths:
            libx11@system: /opt/X11
        version: [system]
        buildable: False
    libxt:
        paths:
            libxt@system: /opt/X11
        version: [system]
        buildable: False
    python:
        paths:
            python@2.7.10: /usr
        buildable: False
    zlib:
        paths:
            zlib@1.2.11: /usr
        buildable: False
