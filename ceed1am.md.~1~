# News

---

### First CEED annual meeting to be held at LLNL

CEED will hold its first annual meeting in August, 2017 at the [HPC Innovation
Center](https://hpcinnovationcenter.llnl.gov/location-and-directions) of
Lawrence Livermore National Laboratory.

The goal of the meeting is to report on the progress in the center, deepen
existing and establish new connections with ECP hardware vendors, ECP software
technologies projects and other collaborators, plan project activities and
brainstorm/work as a group to make technical progress.

In addition to gathering together many of the CEED researchers, the meeting will
include representatives of the ECP management, hardware vendors, software
technology and other interested projects.

Please [contact the CEED team](mailto:ceed-users@llnl.gov) if you are interested
in attending.

---

### GPU Hackathon 2017

Nek/CEED team participated the [GPU Hackathon 2017](https://www.bnl.gov/gpuhackathon/)
that was held in Brookhaven National Laboratory on June 5-9, 2017.

Our team focused on performing and tuning GPU-enabled [Nek5000/Nekbone/NekCEM](nek.md)
version on large-scale GPU systems for small modular reactor, thermal fluids,
and meta-materials modeling.

---

### Workshop on Batched, Reproducible, and Reduced Precision BLAS
The second [Workshop on Batched, Reproducible, and Reduced Precision BLAS](http://bit.ly/Batch-BLAS-2017)
was held in Atlanta, GA on February 23-25, 2017 including many members of the CEED [MAGMA](magma.md) team.

The goal of this workshop was to touch on extending the Basic Linear Algebra
Software Library (BLAS).  The existing BLAS have proven to be very effective in
assisting portable, efficient software for sequential and some of the current
class of high-performance computers. New computational needs in many
applications have motivated the need to investigate the possibility of extending
the currently accepted standards to provide greater parallelism for small size
operations, reproducibility, and reduced precision support.

Of particular interest to CEED is the use of batched BLAS for finite element
tensor contractions, and thus our team is interested in the establishment of a
batched BLAS standard, highly-optimized implementations, and support from
vendors on various architectures.

This is the second workshop of an open forum to discuss and formalize details
related to batched, reproducible, and reduced precision BLAS. The agenda and the
talks from the first workshop can be found [here](http://bit.ly/Batch-BLAS-2016).

### Software release: MFEM v3.3
Version 3.3 of MFEM, a lightweight, general, scalable C++ library for finite element
methods and a main partner in CEED, was released on January 28, 2017 at [http://mfem.org](http://mfem.org)

The goal of MFEM is to enable high-performance scalable finite element
discretization research and application development on a wide variety of
platforms, ranging from laptops to exascale supercomputers.

It has many features, including:

- 2D and 3D, arbitrary order H1, H(curl), H(div), L2, NURBS elements.
- Parallel version scalable to hundreds of thousands of MPI cores.
- Conforming/nonconforming adaptive mesh refinement (AMR), including anisotropic refinement, derefinement and parallel load balancing.
- Galerkin, mixed, isogeometric, discontinuous Galerkin, hybridized, and DPG discretizations.
- Support for triangular, quadrilateral, tetrahedral and hexahedral elements, including arbitrary order curvilinear meshes.
- Scalable algebraic multigrid, time integrators, and eigensolvers.
- Lightweight interactive OpenGL visualization with the MFEM-based [GLVis](http://glvis.org) tool.

Some of the [new additions in version 3.3](https://raw.githubusercontent.com/mfem/mfem/1569425857975d7c961b97d09c300da09aad9f82/CHANGELOG) are:

- Comprehensive support for the linear and nonlinear solvers, preconditioners, time integrators and other features
  from the [PETSc](https://www.mcs.anl.gov/petsc) and [SUNDIALS](https://computation.llnl.gov/projects/sundials/sundials-software) suites.
- Linear system interface for action-only linear operators including support for matrix-free preconditioning and low-order-refined spaces.
- General quadrature and nodal finite element basis types.
- Scalable parallel mesh format.
- Thirty six new integrators for common families of operators.
- Sixteen new serial and parallel example codes.
- Support for CMake, on-the-fly compression of file streams, and HDF5-based output following the [Conduit](https://github.com/LLNL/conduit) mesh blueprint specification.

MFEM is being developed in [CASC](https://computation.llnl.gov/casc), [LLNL](https://www.llnl.gov) and is freely available under LGPL 2.1.
For more details, see the [interactive documentation](http://mfem.org/examples) and the full [CHANGELOG](https://raw.githubusercontent.com/mfem/mfem/master/CHANGELOG).

---

### CEED co-design center announced
The [Exascale Computing Project (ECP)](https://exascaleproject.org) announced on November 11, 2016 its selection
of four [co-design centers](https://exascaleproject.org/ecp_co-design_centers/), including CEED: the Center for
Efficient Exascale Discretizations, which is a [research partnership](about.md) between Lawrence Livermore National Laboratory;
Argonne National Laboratory; the University of Illinois Urbana-Champaign; Virginia Tech; University of Tennessee,
Knoxville; Colorado University, Boulder; and the Rensselaer Polytechnic Institute (RPI).

Additional news coverage can be found in [LLNL Newsline](https://www.llnl.gov/news/lawrence-livermore-tapped-lead-%E2%80%98co-design%E2%80%99-center-exascale-computing-ecosystem)
and the [ANL press release](https://www.anl.gov/articles/co-design-centers-help-make-next-generation-exascale-computing-reality).
